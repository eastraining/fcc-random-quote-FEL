{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["QUOTES","QuoteBox","props","state","quotes","text","author","index","newQuote","bind","tweetQuote","Math","floor","random","this","length","quote","setState","e","preventDefault","tweetLink","target","href","concat","window","open","id","class","title","className","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAIMA,EAAS,CACb,CAAC,gEAA4D,aAC7D,CAAC,4DAA6D,YAC9D,CAAC,2EAA4E,qBAC7E,CAAC,wDAAyD,gBAC1D,CAAC,qEAAsE,iBACvE,CAAC,iHAAkH,cACnH,CAAC,mFAAoF,kBACrF,CAAC,iFAAkF,wBACnF,CAAC,mDAAoD,qBACrD,CAAC,gEAAiE,qBAClE,CAAC,8GAA+G,mBAChH,CAAC,kFAAoF,qBACrF,CAAC,uCAAwC,eACzC,CAAC,0BAA4B,kBAGzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQJ,EACRK,KAAM,GACNC,OAAQ,GACRC,OAAQ,GAEV,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBATD,E,4CAWnB,WACE,IAAIF,EACJ,GACEA,EAAQI,KAAKC,MAAMD,KAAKE,SAAYC,KAAKX,MAAMC,OAAOW,cAC/CR,IAAUO,KAAKX,MAAMI,OAC9B,IAAIS,EAAQF,KAAKX,MAAMC,OAAOG,GAC9BO,KAAKG,SAAS,CACZZ,KAAMW,EAAM,GACZV,OAAQU,EAAM,GACdT,MAAOA,M,wBAGX,SAAWW,GACTA,EAAEC,iBACF,IAAIC,EAAYF,EAAEG,OAAOC,KAAKC,OAAd,iBAA+BT,KAAKX,MAAME,KAA1C,eAAqDS,KAAKX,MAAMG,SAChFkB,OAAOC,KAAKL,K,oBAGd,WAIE,MAHwB,KAApBN,KAAKX,MAAME,MACbS,KAAKN,WAGL,sBAAKkB,GAAG,YAAR,UACE,mBAAGA,GAAG,OAAN,SAAcZ,KAAKX,MAAME,OACzB,oBAAGqB,GAAG,SAAN,eAAkBZ,KAAKX,MAAMG,UAC7B,sBAAKqB,MAAM,aAAX,UACE,mBAAGC,MAAM,YAAYC,UAAU,YAAYH,GAAG,cAAcJ,KAAK,uCAAuCQ,QAAShB,KAAKJ,WAAtH,yBACA,wBAAQkB,MAAM,mBAAmBC,UAAU,YAAYH,GAAG,YAAYI,QAAShB,KAAKN,SAApF,iC,GAxCauB,IAAMC,WAwDdC,MATf,WACE,OACI,sBAAKP,GAAG,MAAR,UACE,cAAC,EAAD,IACA,4BAAG,sDC5DIQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.806f2a7e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n// quotes taken from: https://github.com/erossignon/qod4outlook/blob/master/quotes.txt\nconst QUOTES = [\n  ['Real knowledge is to know the extent of oneâ€™s ignorance.', 'Confucius'],\n  ['The more you know, the more you realize you know nothing.', 'Socrates'],\n  ['Tell me and I forget.  Teach me and I remember.  Involve me and I learn.', 'Benjamin Franklin'],\n  ['Simplicity, carried to the extreme, becomes elegance.', 'Jon Franklin'],\n  ['The most dangerous kind of waste is the waste we do not recognize.', 'Shigeo Shingo'],\n  ['It is not the employer who pays the wages.  He only handles the money.  It is the product that pays the wages.', 'Henry Ford'],\n  ['Don\\'t waste time learning the \"tricks of the trade.\"  Instead, learn the trade.', 'James Charlton'],\n  ['When solving problems, dig at the roots instead of just hacking at the leaves.', 'Anthony J. D\\'Angelo,'],  \n  ['A bad system will beat a good person every time.', 'W. Edwards Deming'],\n  ['Watch the little things; a small leak will sink a great ship.', 'Benjamin Franklin'],\n  ['The world we have created is a product of our thinking; it cannot be changed without changing our thinking.', 'Albert Einstein'],\n  ['If you don\\'t know where you are going, you will probably end up somewhere else.', 'Lawrence J. Peter'],\n  ['The impossible is often the untried.', 'Jim Goodwin'],\n  ['Don\\'t water your weeds.', 'Harvey MacKay'],\n];\n\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quotes: QUOTES,\n      text: '',\n      author: '',\n      index: -1\n    }\n    this.newQuote = this.newQuote.bind(this);\n    this.tweetQuote = this.tweetQuote.bind(this);\n  }\n  newQuote() {\n    let index; \n    do {\n      index = Math.floor(Math.random() * (this.state.quotes.length));\n    } while (index === this.state.index);\n    let quote = this.state.quotes[index];\n    this.setState({\n      text: quote[0],\n      author: quote[1],\n      index: index\n    });\n  }\n  tweetQuote(e) {\n    e.preventDefault();\n    let tweetLink = e.target.href.concat(`?text=\"${this.state.text}\" - ${this.state.author}`);\n    window.open(tweetLink);\n  }\n\n  render() {\n    if (this.state.text === '') {\n      this.newQuote();\n    }\n    return (\n      <div id=\"quote-box\">\n        <p id=\"text\">{this.state.text}</p>\n        <p id=\"author\">- {this.state.author}</p>\n        <div class=\"button-bar\">\n          <a title=\"Tweet me!\" className=\"clickable\" id=\"tweet-quote\" href=\"https://www.twitter.com/intent/tweet\" onClick={this.tweetQuote}>Tweet Quote</a>\n          <button title=\"Get a new quote!\" className=\"clickable\" id=\"new-quote\" onClick={this.newQuote}>New Quote</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n      <div id=\"App\">\n        <QuoteBox />\n        <p><em>by eastraining</em></p>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}